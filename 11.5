public ResponseModel<bool> SaveContractorEmailNote(HttpRequest emailNoteRequest)
{
    try
    {
        var generalConfiguration = _commonService.GetGeneralConfiguration();
        List<Attachments> sendAttachment = new List<Attachments>();

        EmailNoteDto emailNote = new EmailNoteDto()
        {
            EmailNoteId = 0,
            ContractorId = Convert.ToInt32(emailNoteRequest["ContractorId"].ToString()),
            Subject = emailNoteRequest["Subject"].ToString(),
            Body = emailNoteRequest.Unvalidated["Body"].ToString(),
            FromEmail = emailNoteRequest["FromEmail"].ToString(),
            ToEmail = emailNoteRequest["ToEmail"].ToString(),
            CCEmail = emailNoteRequest["CCEmail"].ToString() == "null" ? "" : emailNoteRequest["CCEmail"].ToString(),
            EmailStatusId = Convert.ToInt16(EmailStatus.Pending),
            Excepton = "",
            InnerException = "",
            StackTrace = "",
            CreatedDate = DateTime.Now,
            NoteId = 0,
            ContractorSubject = emailNoteRequest["Subject"].ToString(),
            Note = emailNoteRequest.Unvalidated["Body"].ToString(),
            CreatedBy = _commonService.GetUserId(),
            PhoneNoteId = 0,
            MannualNoteId = 0,
            NoteTypeId = Convert.ToInt16(NoteType.EmailNote),
        };

        Int64 emailNoteId = _contractorRepository.SaveContractorEmailNote(emailNote);
        if (emailNoteId <= 0)
        {
            return _commonService.ReturnResponse(false, false, "Failed to save email note.");
        }

        // Handling direct file attachments
        if (emailNoteRequest.Files.Count > 0)
        {
            foreach (string fileName in emailNoteRequest.Files)
            {
                HttpPostedFile attachmentFile = emailNoteRequest.Files[fileName];

                if (attachmentFile != null)
                {
                    string Datefolderpath = DateTime.Now.Year + "/" + DateTime.Now.Month + "/" + DateTime.Now.Day + "/";
                    string folderPath = "Upload/ContractorEmailNote/" + Datefolderpath + emailNoteId.ToString() + "/";

                    EmailNoteAttachmentDto emailNoteAttachment = new EmailNoteAttachmentDto()
                    {
                        EmailNoteAttachmentId = 0,
                        EmailNoteId = emailNoteId,
                        FileName = attachmentFile.FileName,
                        FilePath = folderPath
                    };
                    Int64 attachmentId = _commonService.SaveEmailNoteAttachment(emailNoteAttachment);

                    if (ConfigurationManager.AppSettings["Azure_Attachment"] == "1")
                    {
                        BLAzureCommonAPI bLAzureCommonAPI = new BLAzureCommonAPI();

                        AzureSaveSingleFileDto azureSaveSingleFile = new AzureSaveSingleFileDto()
                        {
                            ProjectCode = ConfigurationManager.AppSettings["Azure_Project_Code"],
                            FileName = attachmentFile.FileName,
                            SavePath = folderPath,
                            FileBytes = bLAzureCommonAPI.ConvertStreamToByte(attachmentFile.InputStream, attachmentFile.ContentLength)
                        };
                        bLAzureCommonAPI.SaveSingleFile(azureSaveSingleFile);

                        sendAttachment.Add(new Attachments()
                        {
                            FileName = attachmentFile.FileName,
                            FilePath = Path.Combine(folderPath, attachmentFile.FileName)
                        });
                    }
                    else
                    {
                        var folderPathLocal = HttpContext.Current.Server.MapPath(folderPath + attachmentId.ToString());
                        CreateFolderIfNeeded(folderPathLocal);
                        attachmentFile.SaveAs(Path.Combine(folderPathLocal, attachmentFile.FileName));
                        sendAttachment.Add(new Attachments()
                        {
                            FileName = attachmentFile.FileName,
                            FilePath = Path.Combine(folderPathLocal, attachmentFile.FileName)
                        });
                    }
                }
            }
        }

        // Handling attachments based on attachmentIds
        string attachmentIds = emailNoteRequest["attachmentIds"];
        if (!String.IsNullOrEmpty(attachmentIds))
        {
            Int16 templateId = Convert.ToInt16(emailNoteRequest["TemplateId"].ToString());
            var templateAttachments = _templateRepository.GetTemplateAttachment(templateId);
            string[] arr = attachmentIds.Split(',');

            foreach (var item in arr)
            {
                var attachments = templateAttachments.Find(t => t.TemplateAttachmentId == Convert.ToInt16(item));
                if (attachments != null)
                {
                    string Datefolderpath = DateTime.Now.Year + "/" + DateTime.Now.Month + "/" + DateTime.Now.Day + "/";
                    string filePath = "Upload/ContractorEmailNote/" + Datefolderpath + emailNoteId.ToString() + "/";

                    EmailNoteAttachmentDto emailNoteAttachment = new EmailNoteAttachmentDto()
                    {
                        EmailNoteAttachmentId = 0,
                        EmailNoteId = emailNoteId,
                        FileName = attachments.FileName,
                        FilePath = filePath
                    };
                    Int64 attachmentId = _commonService.SaveEmailNoteAttachment(emailNoteAttachment);

                    var folderPath = HttpContext.Current.Server.MapPath(filePath + attachmentId.ToString());
                    CreateFolderIfNeeded(folderPath);

                    if (File.Exists(HttpContext.Current.Server.MapPath(attachments.FilePath)))
                    {
                        System.IO.File.Copy(HttpContext.Current.Server.MapPath(attachments.FilePath), Path.Combine(folderPath, attachments.FileName), true);
                        sendAttachment.Add(new Attachments()
                        {
                            FileName = attachments.FileName,
                            FilePath = Path.Combine(folderPath, attachments.FileName)
                        });

                        if (ConfigurationManager.AppSettings["Azure_Attachment"] == "1")
                        {
                            BLAzureCommonAPI bLAzureCommonAPI = new BLAzureCommonAPI();
                            string filename11 = "UploadedFiles/" + _commonService.GetUserId().ToString();
                            AzureSaveSingleFileDto azureSaveSingleFile = new AzureSaveSingleFileDto()
                            {
                                ProjectCode = ConfigurationManager.AppSettings["Azure_Project_Code"],
                                FileName = attachments.FileName,
                                SavePath = filename11,
                                FileBytes = bLAzureCommonAPI.ConvertFilePathToByte(Path.Combine(folderPath, attachments.FileName), true)
                            };
                            bLAzureCommonAPI.SaveSingleFile(azureSaveSingleFile);
                        }
                    }
                }
            }
        }

        return _commonService.ReturnResponse(true, true, "Email sent successfully.");
    }
    catch (Exception ex)
    {
        return _commonService.ReturnResponse(false, false, "Error occurred: " + ex.Message);
    }
}
