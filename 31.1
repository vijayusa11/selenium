Here's the full code for both `viewfaq.component.html` and `viewfaq.component.ts`, properly formatted and complete:

### HTML (`viewfaq.component.html`):

```html
<div class="row">
    <div class="col-lg-12 col-md-12">
        <div class="card mb-e page-body-min-height">
            <div class="card-body">
                <ngb-accordion #acc="ngbAccordion" [activeIds]="activeIds">
                    <ngb-panel *ngFor="let faq of faqs" [id]="faq.FaqId" class="card mt-2">
                        <ng-template ngbPanelTitle>
                            {{faq.FaqSubject}}
                            <span class="float-right" (click)="togglePanel(faq.FaqId, acc)">
                                <i class="fe" [ngClass]="{'fe-chevron-down': isOpen(faq.FaqId), 'fe-chevron-right': !isOpen(faq.FaqId)}"></i>
                            </span>
                        </ng-template>
                        <ng-template ngbPanelContent>
                            <div [innerHTML]="faq.FaqBody"></div>
                        </ng-template>
                    </ngb-panel>
                </ngb-accordion>
            </div>
        </div>
    </div>
</div>
```

### TypeScript (`viewfaq.component.ts`):

```typescript
import { Component, OnInit } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { finalize } from 'rxjs/operators';
import { ResponseModelDto } from 'src/app/shared/data/common/responsemodeldto';
import { FAQDto } from '../../masters/faq/data/faqdto';
import { ViewFaqService } from '../view-faq.service';

@Component({
  selector: 'app-view-faq',
  templateUrl: './view-faq.component.html',
  styleUrls: ['./view-faq.component.scss']
})
export class ViewFaqComponent implements OnInit {
  faqs: FAQDto[] = [];
  activeIds: string[] = [];

  constructor(
    private viewFaqService: ViewFaqService,
    private title: Title
  ) {
    this.title.setTitle('View FAQ RG Contractor Portal');
  }

  ngOnInit(): void {
    this.viewFaqService.getAllFaqDetail()
      .pipe(finalize(() => { }))
      .subscribe(
        (response: ResponseModelDto<FAQDto[]>) => {
          this.faqs = response.ResponseDto;
          if (this.faqs && this.faqs.length > 0) {
            this.faqs.forEach((faq: FAQDto) => {
              this.activeIds.push(faq.FaqId.toString());
            });
          }
        },
        (error) => {
          console.error('Error fetching FAQs:', error);
        }
      );
  }

  togglePanel(id: string, acc: any): void {
    if (this.isOpen(id)) {
      this.activeIds = this.activeIds.filter(activeId => activeId !== id);
    } else {
      this.activeIds.push(id);
    }
    acc.activeIds = this.activeIds;
  }

  isOpen(id: string): boolean {
    return this.activeIds.includes(id);
  }
}
```

### Explanation:

1. **HTML (`viewfaq.component.html`):**
   - The accordion and panel structure is created using `ngb-accordion` and `ngb-panel`.
   - The click event on the span element calls the `togglePanel` method to handle the opening and closing of the panel.
   - The icon class changes dynamically based on whether the panel is open or closed using `[ngClass]`.

2. **TypeScript (`viewfaq.component.ts`):**
   - The component initializes by fetching FAQ data from the `ViewFaqService` in `ngOnInit`.
   - FAQs are assigned to the `faqs` array, and their IDs are added to `activeIds` to mark them as open initially.
   - The `togglePanel` method adds or removes the FAQ ID from `activeIds` to toggle the panel's state.
   - The `is