public ResponseModel<bool> SaveContractorEmailNote(HttpRequest emailNoteRequest)
{
    var generalConfiguration = _commonService.GetGeneralConfiguration();
    List<Attachments> sendAttachment = new List<Attachments>();
    EmailNoteDto emailNote = new EmailNoteDto()
    {
        EmailNoteId = 0,
        ContractorId = Convert.ToInt32(emailNoteRequest["ContractorId"].ToString()),
        Subject = emailNoteRequest["Subject"].ToString(),
        Body = emailNoteRequest.Unvalidated["Body"].ToString(),
        FromEmail = emailNoteRequest["FromEmail"].ToString(),
        ToEmail = emailNoteRequest["ToEmail"].ToString(),
        CCEmail = emailNoteRequest["CCEmail"].ToString() == "null" ? "" : emailNoteRequest["CCEmail"].ToString(),
        EmailStatusId = Convert.ToInt16(EmailStatus.Pending),
        Excepton = "",
        InnerException = "",
        StackTrace = "",
        CreatedDate = DateTime.Now,
        NoteId = 0,
        ContractorSubject = emailNoteRequest["Subject"].ToString(),
        Note = emailNoteRequest.Unvalidated["Body"].ToString(),
        CreatedBy = _commonService.GetUserId(),
        PhoneNoteId = 0,
        MannualNoteId = 0,
        NoteTypeId = Convert.ToInt16(NoteType.EmailNote),
    };
    Int64 emailNoteId = _contractorRepository.SaveContractorEmailNote(emailNote);

    if (emailNoteId > 0)
    {
        if (emailNoteRequest.Files.Count > 0)
        {
            HttpPostedFile attachmentFile = emailNoteRequest.Files[0];
            if (attachmentFile != null)
            {
                string Datefolderpath = DateTime.Now.Year + "/" + DateTime.Now.Month + "/" + DateTime.Now.Day + "/";

                EmailNoteAttachmentDto emailNoteAttachment = new EmailNoteAttachmentDto()
                {
                    EmailNoteAttachmentId = 0,
                    EmailNoteId = emailNoteId,
                    FileName = attachmentFile.FileName.ToString(),
                    FilePath = "~//Upload/ContractorEmailNote/" + Datefolderpath + emailNoteId.ToString() + "/"
                };
                Int64 attachmentId = _commonService.SaveEmailNoteAttachment(emailNoteAttachment);

                var folderPath = HttpContext.Current.Server.MapPath("~//Upload/ContractorEmailNote/" + Datefolderpath + emailNoteId.ToString() + "/" + attachmentId.ToString());
                CreateFolderIfNeeded(folderPath);
                attachmentFile.SaveAs(Path.Combine(folderPath, attachmentFile.FileName));
                sendAttachment.Add(new Attachments()
                {
                    FileName = attachmentFile.FileName.ToString(),
                    FilePath = Path.Combine(folderPath, attachmentFile.FileName)
                });

            }
        }

        string attachmentIds = emailNoteRequest["attachmentIds"];
        if (!String.IsNullOrEmpty(attachmentIds))
        {
            Int16 templateId = Convert.ToInt16(emailNoteRequest["TemplateId"].ToString());
            var templateAttachments = _templateRepository.GetTemplateAttachment(templateId);
            string[] arr = attachmentIds.Split(',');
            foreach (var item in arr)
            {
                var attachments = templateAttachments.Find(t => t.TemplateAttachmentId == Convert.ToInt16(item));

                string Datefolderpath = DateTime.Now.Year + "/" + DateTime.Now.Month + "/" + DateTime.Now.Day + "/";

                EmailNoteAttachmentDto emailNoteAttachment = new EmailNoteAttachmentDto()
                {
                    EmailNoteAttachmentId = 0,
                    EmailNoteId = emailNoteId,
                    FileName = attachments.FileName,
                    FilePath = "~//Upload/ContractorEmailNote/" + Datefolderpath + emailNoteId.ToString() + "/"
                };
                Int64 attachmentId = _commonService.SaveEmailNoteAttachment(emailNoteAttachment);

                var folderPath = HttpContext.Current.Server.MapPath("~//Upload/ContractorEmailNote/" + Datefolderpath + emailNoteId.ToString() + "/" + attachmentId.ToString());
                CreateFolderIfNeeded(folderPath);

                if (File.Exists(HttpContext.Current.Server.MapPath(attachments.FilePath)))
                {
                    System.IO.File.Copy(HttpContext.Current.Server.MapPath(attachments.FilePath), folderPath + "/" + attachments.FileName, true);
                    sendAttachment.Add(new Attachments()
                    {
                        FileName = attachments.FileName.ToString(),
                        FilePath = folderPath + "/" + attachments.FileName
                    });
                }
            }
        }
    }


    return _commonService.ReturnResponse(true, true, "Email send successfully.");
}
--------

if (ConfigurationManager.AppSettings["Azure_Attachment"] == "1")
{
    BLAzureCommonAPI bLAzureCommonAPI = new BLAzureCommonAPI();


    string filename11 = "UploadedFiles/" + _commonService.GetUserId().ToString();

    AzureSaveSingleFileDto azureSaveSingleFile = new AzureSaveSingleFileDto()
    {
        ProjectCode = ConfigurationManager.AppSettings["Azure_Project_Code"],
        FileName = fileName,
        SavePath = filename11,
        FileBytes = bLAzureCommonAPI.ConvertFilePathToByte(folderPath + "/" + fileName, true)
    };
    bLAzureCommonAPI.SaveSingleFile(azureSaveSingleFile);

    return bLAzureCommonAPI.ExportDownload(new DownloadModel() { FilePath = filename11 + "\\" + fileName }, response);
}
else
{
    return _commonService.Download(new DownloadModel() { FilePath = mainPath + "\\" + fileName }, response);
}
